CREATE TABLE MOON(
ID NUMBER(20),
YES VARCHAR2(20),
SAL NUMBER(20),
DEPTNO VARCHAR2(20)
);

RENAME MOON TO DANISH;
alter table danish add(city varchar2(20));//HERE WE HAVE TO ADD THE DATA ONE BY ONE;
ALTER TABLE DANISH RENAME COLUMN YES TO DNAME;
INSERT INTO DANISH VALUES(1,'MAHESH',200,10,'INDIA');

INSERT INTO DANISH VALUES(2,'NAHESH',300,10,'AMERICA');
INSERT INTO DANISH VALUES(3,'OAHESH',400,10,'NEWZELAND');
INSERT INTO DANISH VALUES(4,'PAHESH',500,20,'AMERICA');
INSERT INTO DANISH VALUES(5,'QAHESH',600,10,'INDIA');
INSERT INTO DANISH VALUES(6,'RAHESH',700,20,'AMERICA');
INSERT INTO DANISH VALUES(7,'SAHESH',800,10,'NEWZELAND');
COMMIT;//SAVE THE DATA
SAVE POINT;//AFTER DELETING WE USE SAVE POINT THEN ROLLBACK WILL NOT WORK;
ROLLBACK;
FLASHBACK TABLE DANISH TO BEFORE  DROP;
TRUNCATE TABLE TABLENAME;
PURGE TABLE STUDENT;
DELETE FROM DANISH WHERE ID='2';
SELECT * FROM EMP,DANISH WHERE EMP.DEPTNO=DANISH.DEPTNO;
SELECT * FROM EMP,DANISH;
SELECT * FROM EMP,DANISH WHERE EMP.DEPTNO=DANISH.DEPTNO(+);
SELECT * FROM EMP,DANISH WHERE EMP.DEPTNO(+)=DANISH.DEPTNO;

UPDATE DANISH
SET DNAME = 'MALESH', City= 'Frankfurt'
WHERE ID = 1;


********new sql***********
data=it is set of information
database= the information of data is set into well organised manner with certain rule is called the database;
database manegement system = it is defined as the collection of program which return in order to mange the database with certain rule and regulation.
 
Type of dbms
1.flat file
2.high radical
3.network 
4.r-dbms(relational)

set line 200;
desc emp;
select * from emp;
select ename,job,mgr from emp;
select ename as a from emp;
select ename,sal+100,sal-100,sal/100,sal,sal*100,job,mod(sal,2) from emp;
select ename||'I AM GOOD BOY' FROM EMP;
SELECT ENAME FROM EMP ORDER BY JOB;//WHERE IS NOT USED TO ORDER CONDITION ASC/DESC//AND AFTER WHERE CONDITON DIRECT ORDER BY ASC/DEC
SELECT ENAME,JOB FROM EMP ORDER BY JOB;
SELECT ENAME,SAL FROM EMP ORDER BY SAL DESC;
SELECT ENAME FROM EMP WHERE SAL>1000;	
SELECT ENAME,JOB FROM EMP WHERE SAL>=900;
SELECT * FROM EMP WHERE JOB='CLERK' AND SAL>=1000;
SELECT * FROM EMP WHERE DEPTNO=10 OR DEPTNO=20;
SELECT * FROM EMP WHERE JOB='MANAGER' AND DEPTNO=30;
SELECT * FROM EMP WHERE JOB!='SALESMAN';
SELECT * FROM EMP WHERE MGR IN(7902,7839,7566);
SELECT * FROM EMP WHERE JOB='SALESMAN' AND DEPT IN(30);
SELECT * FROM EMP WHERE HIREDATE BETWEEN '01-JAN-81' AND '31-DEC-81';
SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;
SELECT * FROM EMP WHERE DEPTNO=30 AND JOB IN('SALESMAN','MANGER);
SELECT ENAME FROM EMP WHERE ENAME LIKE '%A';
SELECT ENAME FROM EMP WHERE JOB LIKE '%MAN';
select upper('danish'),lower('DANISH'),INITCAP('danish'),replace('java','j','d'),length('danish'),substr('danish',5) from dual;
SELECT UPPER(ename),lower(ename),initcap(ename),replace(ename,'A','D),LENGTH(ENAME),SUBSTR(ENAME,5);
SELECT CONCAT(CONCAT(ENAME,JOB),SAL) FROM EMP;
SELECT CONCAT(CONCAT(ENAME,JOB),' IS THE BEST') FROM EMP;
SELECT MIN(SAL),MAX(SAL),AVG(SAL),SUM(SAL),COUNT(ENAME) FROM EMP;
SELECT ENAME,MIN(SAL) FROM EMP///THIS WILL NOT WORK
SELECT SUM(SAL) FROM EMP WHERE JOB='MANAGER';
SELECT MAX(SAL) FROM EMP WHERE HIREDATE LIKE '%DEC%'; 
SELECT COUNT(EMPNO) FROM EMP WHERE COMM IS NOT NULL;//"IS" IS USED TO NOT
SELECT AVG(SAL) FROM EMP WHERE JOB='CLERK';
SELECT MIN(SAL),JOB FROM EMP WHERE JOB='CLERK' GROUP BY JOB;//IN MULTIROW WHERE AND GROUP NAME IS SAME AS COLOUMN;
SELECT SUM(SAL),JOB FROM EMP GROUP BY JOB HAVING sum(SAL)>1000;
select count(ename),deptno from emp group by deptno having count(ename)>=4;
select min(sal),job from emp where job!='MANGER' GROUP BY JOB HAVING MIN(SAL)>1000 ORDER BY MIN(SAL) DESC;
SELECT * FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE ENAME='JONES');
SELECT * FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE JOB='CLEREK);